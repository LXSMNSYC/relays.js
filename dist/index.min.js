var Relay=function(){"use strict";const t=t=>!!t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof t.then,e=(...t)=>t;class i{constructor(t){this._processor="function"==typeof t?t:e,this._input=[],this._output=[],this._received=[]}connectTo(t){if(t instanceof i){const e=t._input,i=this._output;i.includes(t)||i.push(t),e.includes(this)||e.push(this)}return this}connectFrom(t){return t.connectTo(this),this}receive(...e){const i=this._processor,s=(e.length,this._input),n=(this._output,t=>{for(const e of this._output)e.receive(t)}),c=e=>{let s;try{s=i.apply(null,e)}catch{return this}return t(s)?s.then(n):n(s),this},o=s.length;if(0==o)return c(e);for(this._received=[...this._received,...e];o<=this._received.length;){const t=this._received;c(t.slice(0,o)),this._received=t.slice(o)}return this}pass(t){return this.connectTo(new i(t))}}return i}();